package br.com.elvisassis.controlleres;import br.com.elvisassis.service.MathService;import br.com.elvisassis.service.UtilService;import br.com.elvisassis.exception.UnsupportedMathOperationException;import org.springframework.web.bind.annotation.GetMapping;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;@RestController@RequestMapping("/math")public class MathController {  public MathController(MathService mathService){      this.mathService = mathService;  }  private MathService mathService;  @GetMapping("/sum/{numberOne}/{numberTwo}")  public Double sum(@PathVariable("numberOne") String numberOne,                    @PathVariable("numberTwo") String numberTwo) throws Exception {    return mathService.sum(numberOne, numberTwo);  }  @GetMapping("/subtraction/{numberOne}/{numberTwo}")  public Double subtraction (@PathVariable("numberOne") String numberOne,                     @PathVariable("numberTwo") String numberTwo) {    return mathService.subtraction(numberOne, numberTwo);  }  @GetMapping("/division/{numberOne}/{numberTwo}")  public Double division (@PathVariable("numberOne") String numberOne,                     @PathVariable("numberTwo") String numberTwo) {    return mathService.division(numberOne, numberTwo);  }  @GetMapping("/multiplication/{numberOne}/{numberTwo}")  public Double multiplication (@PathVariable("numberOne") String numberOne,                     @PathVariable("numberTwo") String numberTwo) {    return mathService.multiplication(numberOne, numberTwo);  }  @GetMapping("/mean/{numberOne}/{numberTwo}")  public Double mean(@PathVariable("numberOne") String numberOne,                    @PathVariable("numberTwo") String numberTwo) throws Exception {    return mathService.mean(numberOne, numberTwo);  }  @GetMapping("/squareroot/{number}")  public Double squareRoot(@PathVariable("number") String number) throws Exception {    return mathService.squareRoot(number);  }}