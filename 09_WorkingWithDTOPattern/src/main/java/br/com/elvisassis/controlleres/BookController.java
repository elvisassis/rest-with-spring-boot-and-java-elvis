package br.com.elvisassis.controlleres;import br.com.elvisassis.data.dto.BookDTO;import br.com.elvisassis.data.dto.PersonDTO;import br.com.elvisassis.model.Book;import br.com.elvisassis.service.BookService;import org.springframework.http.HttpStatus;import org.springframework.http.MediaType;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import java.util.List;@RestController@RequestMapping("/api/book/v1")public class BookController {    public BookController(BookService service) {        this.service = service;    }    private BookService service;    @GetMapping    public ResponseEntity<List<BookDTO>> findAll() {        var booksDTO = service.findAll();        return ResponseEntity.ok(booksDTO);    }    @GetMapping("/{id}")    public ResponseEntity<BookDTO> findById(@PathVariable Long id) {        var dto = service.findById(id);        return ResponseEntity.ok(dto);    }    @PostMapping(produces =            MediaType.APPLICATION_JSON_VALUE,            consumes = MediaType.APPLICATION_JSON_VALUE)    public ResponseEntity<BookDTO> create(@RequestBody BookDTO bookDTO) {        var dto = service.create(bookDTO);        return ResponseEntity.ok(dto);    }    @PutMapping(produces = {                    MediaType.APPLICATION_JSON_VALUE    },            consumes = {                    MediaType.APPLICATION_JSON_VALUE            })    public ResponseEntity<BookDTO> update(@RequestBody BookDTO bookDTO) {        var dto = service.update(bookDTO);        return ResponseEntity.status(HttpStatus.CREATED).body(dto);    }    @DeleteMapping("/{id}")    public ResponseEntity<Void> delete(@PathVariable Long id) {        service.delete(id);        return ResponseEntity.noContent().build();    }}