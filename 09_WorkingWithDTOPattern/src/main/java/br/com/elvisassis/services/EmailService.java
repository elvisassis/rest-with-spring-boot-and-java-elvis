package br.com.elvisassis.services;import br.com.elvisassis.config.EmailConfig;import br.com.elvisassis.data.dto.request.EmailRequestDTO;import br.com.elvisassis.mail.EmailSender;import com.fasterxml.jackson.core.JsonProcessingException;import com.fasterxml.jackson.databind.ObjectMapper;import org.springframework.stereotype.Service;import org.springframework.web.multipart.MultipartFile;import java.io.File;import java.io.IOException;@Servicepublic class EmailService {    private EmailSender emailSender;    private EmailConfig emailConfigs;    public EmailService(EmailSender emailSender, EmailConfig emailConfigs) {        this.emailSender = emailSender;        this.emailConfigs = emailConfigs;    }    public void sendSimpleEmail(EmailRequestDTO emailRequest) {        emailSender                .to(emailRequest.getTo())                .withSubject(emailRequest.getSubject())                .withMessage(emailRequest.getBody())                .send(emailConfigs);    }    public void setEmailWithAttachment(String emailRequestJson, MultipartFile attachment) {        File tempFile = null;        try {            EmailRequestDTO emailRequest = new ObjectMapper().readValue(emailRequestJson, EmailRequestDTO.class);            tempFile = File.createTempFile("attachment", attachment.getOriginalFilename());            attachment.transferTo(tempFile);            emailSender                    .to(emailRequest.getTo())                    .withSubject(emailRequest.getSubject())                    .withMessage(emailRequest.getSubject())                    .attach(tempFile.getAbsolutePath())                    .send(emailConfigs);        } catch (JsonProcessingException e) {            throw new RuntimeException("Error parsing email request JSON!", e);        } catch (IOException e) {            throw new RuntimeException("Error processing the attachment!", e);        } finally {            if(tempFile != null && tempFile.exists()) tempFile.delete();         }    }}